
name: Docker Image CD on Amazon ECS

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-deploy:
    name: Build, Test, and Deploy
    runs-on: ubuntu-22.04
    permissions:
      id-token: write
      contents: read
      security-events: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: ${{ secrets.AWS_REGION }}
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/github_actions_role-${{ secrets.AWS_REGION }}
          audience: sts.amazonaws.com

      - name: Retrieve build arguments from Parameter Store
        run: |
          echo "ECR_REPOSITORY_NAME=$(aws ssm get-parameter --name '/github-actions/ecr_repository_name' --query 'Parameter.Value' --output text)" >> $GITHUB_ENV
          echo "ECR_REGISTRY=$(aws ssm get-parameter --name '/github-actions/ecr_registry' --query 'Parameter.Value' --output text)" >> $GITHUB_ENV
          echo "NEXT_PUBLIC_BEDROCK_KNOWLEDGE_BASE_ID=$(aws ssm get-parameter --name '/github-actions/bedrock_knowledge_base_id' --query 'Parameter.Value' --output text)" >> $GITHUB_ENV
          echo "NEXT_PUBLIC_BEDROCK_KNOWLEDGE_BASE_NAME=$(aws ssm get-parameter --name '/github-actions/bedrock_knowledge_base_name' --query 'Parameter.Value' --output text)" >> $GITHUB_ENV

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2 # change to v2 so that the Docker credentials are no longer exposed to logs

      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: claude-kb-agent-rag
        run: |
          # Gets the date and time
          # DATE_TIME=$(date +'%Y%m%d-%H%M%S')
          # Constructing the full tag
          FULL_IMAGE_TAG="DEV-${IMAGE_TAG}-${GITHUB_SHA::4}"
          # Builds the image
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY_NAME:$FULL_IMAGE_TAG \
            --build-arg NEXT_PUBLIC_BEDROCK_KNOWLEDGE_BASE_ID=$NEXT_PUBLIC_BEDROCK_KNOWLEDGE_BASE_ID \
            --build-arg NEXT_PUBLIC_BEDROCK_KNOWLEDGE_BASE_NAME=$NEXT_PUBLIC_BEDROCK_KNOWLEDGE_BASE_NAME \
            .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY_NAME:$FULL_IMAGE_TAG
    
